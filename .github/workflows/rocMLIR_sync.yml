name: rocMLIR sync with extended accuracy

on:
  workflow_call:
    inputs:
      rocm_release:
        type: string
        description: ROCm release version
        required: true
      base_image:
        type: string
        description: Base image for rocm Docker build
        required: true
      docker_image:
        type: string
        description: Docker image name for rocm Docker build
        required: true
      build_navi:
        type: string
        description: Build navi number
        required: true
      benchmark_utils_repo:
        type: string
        description: Repository where benchmark utils are stored
        required: true
      performance_reports_repo:
        type: string
        description: Repository where performance reports are stored
        required: true
      organization:
        type: string
        description: Organization based on which location of files will be different
        required: true
    secrets:
      gh_token:
        description: 'Github Access Token'
        required: true
        
env:
  REPORTS_DIR: migraphx-reports
  TEST_RESULTS_PATH: /usr/share/migraphx/${{ inputs.organization }}/test-results
  
jobs:
  sync_rocMLIR:
    name: Sync rocMLIR and run extended accuracy
    runs-on: [self-hosted,performance]
    steps:
      - name: Clean up canceled runs
        run: |
          wf_id=$(curl -H "Authorization: token ${{ secrets.gh_token }}" \
          ${{ github.api_url }}/repos/${{ github.repository }}/actions/workflows \
          | jq -r '.workflows[] | {id, name}| select(.name == "${{ github.workflow }}") | .id')
          cancel_id=$(curl -H "Authorization: token ${{ secrets.gh_token }}" \
          ${{ github.api_url }}/repos/${{ github.repository }}/actions/workflows/$wf_id/runs?per_page=10 \
          | jq -r '.workflow_runs[] | {id, run_number, conclusion} | select(.conclusion == "cancelled") | {id, run_number}' \
          | jq -n 'input | .id')
          docker stop perf-test-$cancel_id || true
              
      - name: Get date
        if: ${{ github.event_name != 'pull_request' }}
        run: echo todays_date="$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Extract SHA1 
        if: ${{ github.event_name != 'pull_request' }}
        run: echo rocmlirsha="$(git ls-remote https://github.com/ROCm/rocMLIR.git develop | awk '{print $1}')" >> $GITHUB_ENV

      - name: Checkout code
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v4.1.1
        
      - name: Check for changes
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          rocMLIR=$(grep ROCm/rocMLIR requirements.txt | grep -oP '(?<=@)[a-f0-9]{40}')
          if [ "${rocMLIR}" == ${{ env.rocmlirsha }} ]; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi
          
      - name: Update file
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        run:  |
          sed -i "s/ROCm\/rocMLIR@[^ ]*/ROCm\/rocMLIR@${{ env.rocmlirsha }}/g" requirements.txt

      - name: Create branch and PR
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        uses: peter-evans/create-pull-request@v6.0.4
        with:
          #token: ${{ secrets.gh_token }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update rocMLIR main ${{ env.rocmlirsha }}
          committer: Github <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: rocMLIR-sync-${{ env.todays_date }}
          delete-branch: true
          title: 'rocMLIR Weekly Sync ${{ env.todays_date }}'
          body: |
            Update rocMLIR version
            - Updated with changes from ${{ env.todays_date }}
            - Auto-generated by [create-pull-request][1]
            - Update requirements.txt to rocMLIR@${{ env.rocmlirsha }}

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            rocMLIR
            dependencies
            automated 
            skip bot checks
          assignees: | 
            TedThemistokleous
          reviewers: |
            TedThemistokleous
            causten
          draft: false
          base: develop
      
      - name: Checkout new branch
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        uses: actions/checkout@v4.1.1
        with:
          ref: rocMLIR-sync-${{ env.todays_date }}
        
      - name: Checkout utils
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        uses: actions/checkout@v4.1.1
        with:
          repository: ${{ inputs.benchmark_utils_repo }}
          path: migraphx-benchmark-utils
          token: ${{ secrets.gh_token }}
          ref: main
          
      - name: Rebuild base image
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        env:
          ROCM_RELEASE: ${{ inputs.rocm_release }}
          ROCM_BASE: ${{ inputs.base_image }}:${{ inputs.rocm_release }}
          DOCKERIMAGE: ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-temp
          BUILD_NAVI: ${{ inputs.build_navi }}
          TOKEN: ${{ secrets.gh_token }}
        run: |
          cd $GITHUB_WORKSPACE/migraphx-benchmark-utils/scripts
          ./build_migraphx_docker.sh ${{ inputs.benchmark_utils_repo }} $GITHUB_REPOSITORY rocMLIR-sync-${{ env.todays_date }}

      - name: Build temp docker
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        run: >
          cd $GITHUB_WORKSPACE && git fetch &&
          git checkout rocMLIR-sync-${{ env.todays_date }} &&
          cd $GITHUB_WORKSPACE/migraphx-benchmark-utils &&  
          docker build --no-cache
          --build-arg BRANCH=rocMLIR-sync-${{ env.todays_date }} 
          --build-arg DOCKERBASE=rocm-migraphx:${{ inputs.rocm_release }}-temp
          --build-arg MIOPENTUNE=miopen-dbs/rocm${{ inputs.rocm_release }}
          --build-arg benchmark_utils_repo=${{ inputs.benchmark_utils_repo }}
          -t "migraphx-rocm:${{ inputs.rocm_release }}-rocMLIR" 
          -f dockerfiles/Daily.Dockerfile .
          
      - name: Run extended accuracy test
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        run: >
          docker run 
          -e TZ=America/Chicago
          -e TARGET=gpu
          -e PYTHONPATH=/src/AMDMIGraphX/build/lib
          -e USE_RBUILD=1
          --device=/dev/dri
          --device=/dev/kfd
          --network=host
          --group-add=video
          -v /usr/share/migraphx/saved-models:/saved-models:ro
          -v /usr/share/migraphx/new-saved-models:/new-saved-models:ro
          -v $GITHUB_WORKSPACE/migraphx-benchmark-utils/scripts:/migraphx/sh:ro
          -v /usr/share/migraphx/AMD/test-results:/data/test-results
          --workdir /migraphx/sh
          migraphx-rocm:${{ inputs.rocm_release }}-rocMLIR /bin/bash -c "./build_migraphx.sh && ./accuracy_test-extended.sh"
          
      - name: Get accuracy result
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        run: |
          cd ${{ env.TEST_RESULTS_PATH }}
          echo last_extended="$(ls -td extended_accuracy* | head -1)" >> $GITHUB_ENV
          echo comment_file="$(ls -td extended_accuracy* | head -1)/results.md" >> $GITHUB_ENV

      - name: Checkout reports
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        uses: actions/checkout@v4.1.1
        with:
          repository: ${{ inputs.performance_reports_repo }}
          path: ${{ env.REPORTS_DIR }}
          token: ${{ secrets.gh_token }}
        
      - name: Push accuracy to repo
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        run: |
          cd ${{ env.TEST_RESULTS_PATH }}
          mkdir -p $GITHUB_WORKSPACE/${{ env.REPORTS_DIR }}/extended_accuracy_reports/${{ env.todays_date }}
          cp -r ${{ env.last_extended }}/. $GITHUB_WORKSPACE/${{ env.REPORTS_DIR }}/extended_accuracy_reports/${{ env.todays_date }}
          cd $GITHUB_WORKSPACE/${{ env.REPORTS_DIR }}
          git add .
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions
          git commit -m "Extended accuracy results run https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" -a
          git push

      - name: Accuracy comment on PR
        if: ${{ github.event_name != 'pull_request' && env.skip != 'true' }}
        uses: thollander/actions-comment-pull-request@v2.5.0
        with:
          filePath: ${{ env.TEST_RESULTS_PATH }}/${{ env.comment_file }}
          #GITHUB_TOKEN: ${{ secrets.gh_token }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pr_number: ${{ env.PULL_REQUEST_NUMBER }}

      - name: Replace base docker after merge
        if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'rocMLIR-sync-')
        run: |
          if [[ $(docker images --filter=reference="${{ inputs.docker_image }}:${{ inputs.rocm_release }}-old" | awk 'NR>1 {print $3}') ]]; then
            docker rmi -f $(docker images --filter=reference="${{ inputs.docker_image }}:${{ inputs.rocm_release }}-old" | awk 'NR>1 {print $3}')
            echo "Removed ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-old image"
          fi
          docker tag ${{ inputs.docker_image }}:${{ inputs.rocm_release }} ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-old
          echo "Current image ${{ inputs.docker_image }}:${{ inputs.rocm_release }} renamed to ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-old"
          docker tag ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-temp ${{ inputs.docker_image }}:${{ inputs.rocm_release }}
          echo "Temp image ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-temp renamed to ${{ inputs.docker_image }}:${{ inputs.rocm_release }}"
          docker rmi ${{ inputs.docker_image }}:${{ inputs.rocm_release }}-temp
